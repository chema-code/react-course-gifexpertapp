{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","giphyEndPoint","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EAENC,mBAAS,IAFH,mBAEnCC,EAFmC,KAEvBC,EAFuB,KAkB1C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAG/BR,GAAY,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,QAMpC,SACI,uBACIC,KAAK,OACLC,MAAST,EACTU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAE4CC,UAAWH,GAFvD,sDAGJ,mCAHI,SAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KACDC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAVvB,kBAcZL,GAdY,4CAAH,sDCEPQ,G,KAAc,SAAC,GAAuB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAIrC,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAKL,EAAKM,IAAMP,IACrB,kCAAMA,UCJLQ,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECHX,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAU,WACNzB,EAASC,GACJyB,MAAM,SAAAC,GACHH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,UAKlBC,EDZwBK,CAAa3B,GAAhCc,EAFuB,EAE5BP,KAAac,EAFe,EAEfA,QAEpB,OAEI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDjB,IACjDqB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEX,qBAAKA,UAAU,YAAf,SAEEH,EAAOL,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAESA,GADCA,EAAIC,aEhBjBiB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,cAFhB,mBAEvB2C,EAFuB,KAEXC,EAFW,KAS9B,OACI,qCAEI,8CACA,cAAC,EAAD,CAAa7C,YAAe6C,IAC5B,uBAEA,6BAEQD,EAAWpB,KAAI,SAACT,GACZ,OAAO,cAAC,EAAD,CAEPA,SAAUA,GADHA,Y,MCnB/B+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5d7f1595.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategory}) => {\r\n    \r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length < 2){\r\n            return;\r\n        }\r\n        setCategory(cats => [inputValue, ...cats]);\r\n\r\n    }\r\n    \r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value = {inputValue}\r\n                onChange = { handleInputChange}\r\n            />\r\n        </form>        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired    \r\n};\r\n\r\n\r\n","\r\nexport const getGifs = async(category ) => {\r\n\r\n    const giphyEndPoint =`https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=vYDLYtMBdjOuYMaXRLx56YoHvYDom8RB`;\r\n    const apiKey = 'vYDLYtMBdjOuYMaXRLx56YoHvYDom8RB';\r\n    const resp = await fetch(giphyEndPoint);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map ( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\nimport 'animate.css';\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n    \r\n    //console.log(id);\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={ title } />\r\n            <p> { title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport 'animate.css';\r\n\r\n\r\nexport const GifGrid = ({category}) => {    \r\n    \r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n\r\n        <>\r\n        <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n        { loading && <p className='animate__animated animate__flash'>Loading...</p> }\r\n        \r\n        { <div className='card-grid'>     \r\n            {\r\n            images.map( (img) => (\r\n                <GifGridItem \r\n                    key={ img.id }\r\n                    { ...img } \r\n                    />\r\n            ))\r\n            }\r\n        </div>}\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    \r\n    useEffect(() => {\r\n        getGifs( category )\r\n            .then( imgs => {                \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });               \r\n            });\r\n        });\r\n        \r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {      \r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n    \r\n    // const handleAdd = () =>{\r\n    //     //setCategories([...categories,'Samurai X']);\r\n    //     setCategories(cats => [...cats, 'Samuray X']);\r\n    // }\r\n    \r\n    return (\r\n        <>\r\n            \r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategory = {setCategories}/>\r\n            <hr/> \r\n            \r\n            <ol>\r\n               {\r\n                    categories.map((category)=> {\r\n                        return <GifGrid \r\n                        key = {category}\r\n                        category={category}/> //<li key={category}>{category}</li>\r\n                    })\r\n               }\r\n            </ol> \r\n       \r\n        </>\r\n    )\r\n};\r\n\r\nexport default GifExpertApp;\r\n\r\n","import ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(  \n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}